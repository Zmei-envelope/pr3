#include <iostream>
#include <cmath>  // Для использования функции sqrt
#include <algorithm>  // Для использования функции swap

int main() {
    // Ввод размера массива
    int n;
    std::cout << "Введите размер массива: ";
    std::cin >> n;

    // Выделение динамической памяти для массивов b и c
    double *b = new double[n]; // Исходный массив
    double *c = new double[n]; // Массив для хранения результатов
    int c_size = 0; // Размер массива c

    // Ввод элементов массива b
    std::cout << "Введите элементы массива: ";
    for (int i = 0; i < n; ++i) {
        std::cin >> b[i];
        // Если элемент положительный, добавляем его в массив c
        if (b[i] > 0) {
            c[c_size] = sqrt(b[i]) / 5; // Вычисляем корень квадратный и делим на 5
            c_size++; // Увеличиваем размер массива c
        }
    }

    // Сортировка массива c методом выбора
    for (int i = 0; i < c_size - 1; ++i) {
        int min_idx = i; // Индекс минимального элемента
        for (int j = i + 1; j < c_size; ++j) {
            if (c[j] < c[min_idx]) { // Если найден меньший элемент
                min_idx = j; // Обновляем индекс минимального элемента
            }
        }
        std::swap(c[i], c[min_idx]); // Меняем местами текущий элемент с минимальным
    }

    // Вывод упорядоченного массива c
    std::cout << "Упорядоченный массив: ";
    for (int i = 0; i < c_size; ++i) {
        std::cout << c[i] << " ";
    }
    std::cout << std::endl;

    // Освобождение выделенной памяти
    delete[] b;
    delete[] c;
    return 0;
}
